<?xml version="1.0"?>

<launch>
	
	<!-- Gazebo parameters -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="world" default="house2" />
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" value="$(find erl_third_assignment)/worlds/$(arg world).world"/>
  <arg name="respawn_gazebo" default="false"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="100"/>

  <!-- Set use_sim_time flag -->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- Set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>
  
  <!-- Start gazebo server-->
  <group if="$(arg use_clock_frequency)">
    <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
  </group>
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="screen"
	  args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)" />
	
  <!-- Start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
  </group>


  <!-- Parameters -->
  <param name="human_x" value="-5"/>
  <param name="human_y" value="8"/>

  <param name="home_x" value="-5"/>
  <param name="home_y" value="4"/>


  <!-- Spawn the human model -->
  <param name="human_description" textfile="$(find erl_third_assignment)/urdf/human.urdf" />
  <node name="urdf_spawner_human" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model human -param human_description -x -6 -y 8.5 -z 0.34 -R 0 -P 0 -Y -0.75"/>
  <node name="human_controller" pkg="erl_third_assignment" type="human.py" respawn="true" output="screen"/>


  <!-- Spawn the robot model -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find erl_third_assignment)/urdf/robot_laser_camera.xacro"/>
  <node name="urdf_spawner_robot" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	  args="-urdf -model robot -param robot_description -x -5 -y 8 -Y -1.57 -z 0.05"/>


  <!-- Start Rviz -->
  <param name="use_gui" value="False"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> 
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find erl_third_assignment)/config/sim.rviz" />


  <!-- Run the node associated to the sensor -->
  <!-- <node name="sensor_controller" pkg="erl_third_assignment" type="sensor.py" respawn="true" output="screen"/> -->


  <!-- Run the state machine -->
  <node name="state_machine" pkg="erl_third_assignment" type="state_machine.py" required="true" output="log"/>


  <!-- Include other launch files -->
  <include file="$(find erl_third_assignment)/launch/move_base.launch"></include>
  <include file="$(find erl_third_assignment)/launch/gmapping.launch"></include>

</launch>
